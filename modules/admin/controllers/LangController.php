<?php

namespace app\modules\admin\controllers;

use app\models\AboutPage;
use app\models\ContactPage;
use app\models\DescriptionPage;
use app\models\Helper;
use app\models\HomePage;
use app\models\ProjectsPage;
use app\models\ServicesPage;
use app\modules\admin\models\AboutItem;
use app\modules\admin\models\Account;
use app\modules\admin\models\AdvItem;
use app\modules\admin\models\BlockItem;
use app\modules\admin\models\Faq;
use app\modules\admin\models\FaqTopic;
use app\modules\admin\models\Footer;
use app\modules\admin\models\Forex;
use app\modules\admin\models\Lang;
use app\modules\admin\models\Language;
use app\modules\admin\models\Navigation;
use app\modules\admin\models\Page;
use app\modules\admin\models\Pages;
use app\modules\admin\models\Payment;
use app\modules\admin\models\Platform;
use app\modules\admin\models\Post;
use app\modules\admin\models\Project;
use app\modules\admin\models\Service;
use app\modules\admin\models\Settings;
use app\modules\admin\models\Site;
use app\modules\admin\models\SiteSettings;
use app\modules\admin\models\SliderItem;
use app\modules\admin\models\Testimonials;
use Yii;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\web\ForbiddenHttpException;
use yii\web\NotFoundHttpException;

class LangController extends Controller
{

    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['*'],
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    public function init()
    {
        parent::init();
        Yii::$app->errorHandler->errorAction = 'admin/main/error';
    }

    public function beforeAction($action)
    {
        if (!Site::get('language_module_enabled')) throw new ForbiddenHttpException('Module disabled. Enable first');
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actions()
    {
        $this->layout = 'main';
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public function actionIndex()
    {
        $langs = Language::find()->all();
        $count = count($langs);
        return $this->render('index',[
            'langs' => $langs,
            'count' => $count
        ]);
    }

    public function actionCreate(){
        $model = new Language();
        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            Yii::$app->getSession()->setFlash('lang', 'Language successfully created!');
            return $this->redirect('index');
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    public function actionUpdate($id)
    {
        $model = Language::findOne($id);
        if (!$model) throw new NotFoundHttpException('Record not found');
        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            Yii::$app->getSession()->setFlash('lang', 'Language successfully updated!');
            return $this->redirect('index');
        } else {
            return $this->render('update', [
                'model' => $model
            ]);
        }
    }

    public function actionDelete($id){
        $lang = Language::findOne($id);
        Settings::findOne(['locale' => $lang->locale])->delete();
        $pages = Page::find()->where(['locale' => $lang->locale])->all();
        foreach ($pages as $page) {
            $page->delete();
        }
        $posts = Post::find()->where(['locale' => $lang->locale])->all();
        foreach ($posts as $post) {
            $post->delete();
        }
        $navs = Navigation::find()->where(['locale' => $lang->locale])->all();
        foreach ($navs as $nav){
            $nav->delete();
        }
        $faqs = Faq::find()->where(['locale' => $lang->locale])->all();
        foreach ($faqs as $faq) {
            $faq->delete();
        }
        $lang->delete();
        Yii::$app->getSession()->setFlash('lang', 'Language successfully deleted!');
        return $this->redirect('index');
    }

}
