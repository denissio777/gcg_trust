<?php

namespace app\controllers;

use app\models\BuyForm;
use app\models\Helper;
use app\models\Translator;
use app\models\Wallet;
use app\modules\admin\models\Page;
use app\modules\admin\models\Post;
use app\modules\admin\models\Settings;
use app\modules\admin\models\Site;
use dektrium\user\models\User;
use yii\data\ArrayDataProvider;
use Yii;
use yii\filters\AccessControl;
use yii\helpers\Url;
use yii\web\Controller;
use yii\filters\VerbFilter;
use app\models\LoginForm;
use app\models\ContactForm;
use yii\web\NotFoundHttpException;
use yii\web\Response;

class SiteController extends Controller
{
    public $language;

    public function beforeAction($action)
    {
        $session = Yii::$app->session;
        $lang = $session->get('language', 'en');
        $this->language = $lang;
        Yii::$app->view->params['lang'] = $lang;
        Yii::$app->view->params['settings'] = Settings::findOne(['locale' => $lang]);
        Yii::$app->view->params['translator'] = new Translator($lang);

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['logout'],
                'rules' => [
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                    'switch' => ['post']
                ],
            ],
        ];
    }

    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public function actionIndex($slug = false)
    {
        if (!$slug){
            $model = Page::findOne(['locale' => $this->language, 'home_page' => 1]);
        }else{
            $model = Page::findOne(['slug' => $slug]);
        }
        if (!$model || $model->hide && Yii::$app->user->identity->isAdmin) throw new NotFoundHttpException('Page not found');

        $contact_form = new ContactForm();

        $translator = new Translator($this->language);

        if ($contact_form->load(Yii::$app->request->post()) && $records = $contact_form->getRecords()){
            $results = [];

            foreach ($records as $k => $v) {

                $result = [
                    'status' => ''
                ];

                for($i = 0; $i < count($v)-1; $i++) {

                    $first_area = $v[$i]['area'];
                    $first_diff = $v[$i+1]['timestamp'] - $v[$i]['timestamp'];

                    $second_area = $v[$i+1]['area'];
                    $second_diff = 0;

                    $third_area = 'N/A';
                    if (isset($v[$i+2])) {
                        $second_diff = $v[$i+2]['timestamp'] - $v[$i+1]['timestamp'];
                        $third_area = $v[$i+2]['area'];
                    }

                    switch ($first_area){
                        case 'nav':
                            if ($second_area === 'news'){
                                if ($first_diff <= 10){
                                    switch ($third_area){
                                        case 'news':
                                            if ($second_diff <= 5) {
                                                $result['status'] = 'Low interest';
                                            }
                                            break;
                                        case 'main':
                                            if ($second_diff <= 10) $result['status'] = 'General user';
                                            break;
                                        default:
                                            $result = 'N/A';
                                    }
                                }
                            } else if ($second_area === 'main'){
                                if ($first_diff <= 5) $result['status'] = 'High interest';
                                else if ($first_diff <= 2) if ($third_area === 'nav' && $second_diff) $result['status'] = 'Mistake';
                            }
                            break;
                        case 'main':
                            if ($second_area === 'main' && $first_diff <= 2) $result['status'] = 'Bot';
                            break;
                        case 'news':
                            if ($first_diff <= 5 && $second_area === 'news' &&
                                $second_diff <= 5 && $third_area === 'news') $result['status'] = 'Crawler';
                            break;
                        default:
                            $result = 'N/A';
                    }

                }

                array_push($results, [
                    'user_id' => $k,
                    'result' => $result['status'],
                ]);

                $provider = new ArrayDataProvider([
                    'allModels' => $results,
                    'pagination' => [
                        'pageSize' => 10,
                    ]
                ]);

            }
            return $this->render('results', compact('provider', 'results'));
        }

        return $this->render('_page', [
            'page' => $model,
            'contact_form' => $contact_form,
            'locale' => $this->language,
            'translator' => $translator
        ]);
    }

    public function actionTime(){
        if (Yii::$app->request->isAjax){
            \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
            return date('Y-m-d H:i:s');
        }
    }

    public function actionSwitch($locale){
        $session = Yii::$app->session;
        $session->remove('language');
        $session->set('language', $locale);
        $locale = $session->get('language', $locale);
        $this->language = $locale;
        Yii::$app->view->params['lang'] = $locale;
        return $this->goHome();
    }


    public function actionPost($slug){
        if (!Site::get('blog_module_enabled')) $this->goHome();
        $translator = new Translator($this->language);
        $model = Post::findOne(['slug' => $slug]);
        if (!$model) throw new NotFoundHttpException($translator->translate['record_not_found']);
        if (Yii::$app->user->id != $model->created_by) $model->views ++;
        $model->save(false);
        return $this->render('_post', [
            'model' => $model,
            'locale' => $this->language
        ]);
    }

    public function actionHome(){
        return $this->render('home');
    }
}
